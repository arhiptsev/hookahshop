type Query {
  articles: [Article]
  article(id: Int): Article
  products(category: Int): [Product]
  product(id: Int): Product
  categories: [Category]
  category(id: Int): Category
}

type Article {
  id: Int
  title: String
  content: String
  created_at: Int
  updated_at: Int
}

type Product {
  id: Int
  name: String
  desc: String
  price: Int
  count: Int
  categories: [Category]
}

input ProductInput {
  name: String
  desc: String
  price: Int
  count: Int
}

type Category {
  id: Int
  name: String
  products: [Product]
}

type Mutation {
  createProduct(product: ProductInput): Product
}

type Query {
  login (username: String, password: String): SignInResponse
  registration(username: String, password: String): RegistrationResponse
  cart: [Cart]
  orders: [Order]
  order: Order
}


type Mutation {
  addToCart(productId: Int): Cart
  addOrder(order: InputOrder): Order
  removeOrder(id: Int): SuccessResponse
  removeFromCart(id: Int): SuccessResponse
  createOrderFromCart: Order
}

type SignInResponse {
  access_token: String
}

type Cart {
  id: Int,
  count: Int,
  product: Product
}


type Order {
  id: Int,
  created_at: Int,
  items: [OrderItem]
}

input InputOrder {
  created_at: Int,
  items: [InputOrderItem]
}

input InputOrderItem {
  count: Int,
  product_id: Int
}

type OrderItem {
  id: Int,
  count: Int,
  product: Product
}



type OrderItem {
  id: Int,
  count: Int,
  product: Product
}

type RegistrationResponse {
  isSuccess: Boolean
}

type SuccessResponse {
  isSuccess: Boolean
}

scalar String
scalar Int
